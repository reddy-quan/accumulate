(4) 为了方便地使用cscope，我们还需要下载cscope的键盘映射设置，这样就可以在gvim中简单地通过快捷键来使用cscope，而不必敲复杂的命令了。键盘映射可以从这里下载：http://cscope.sourceforge.net/cscope_maps.vim。
将下载到的cscope_maps.vim放在gvim的插件目录里，如D:\Program Files\Vim\vimfiles\plugin中。Linux用户可以放在$HOME/.vim/plugin中。

1.
cscope -Rbq
-R: 在生成索引文件时，搜索子目录树中的代码
-b: 只生成索引文件，不进入cscope的界面
-q: 生成cscope.in.out和cscope.po.out文件，加快cscope的索引速度

2.
:cs show #查看状态
3.
:cs f g timer_tick #查找定义
:cs f c timer_tick

:cs f t timer_tick #查找所有引用(字符串)

使用方法：
       :cs find {querytype} {name}
其中：
       {querytype} 即相对应于实际的cscope行接口数字，同时也相对应于nvi命令：
s   —— 查找这个C符号
g  —— 查找这个定义
d  —— 查找被这个函数调用的函数（们）
c  —— 查找调用这个函数的函数（们）
t   —— 查找这个字符串
e  —— 查找这个egrep匹配模式
f   —— 查找这个文件
i   —— 查找#include这个文件的文件（们）
实例：（#号后为注释）
       :cscope find c ftpd_send_resp                     # 查找所有调用这个函数的函数（们）
       :cscope find 3 ftpd_send_resp                     # 和上面结果一样


 kill  ：杀掉一个cscope链接（或者杀掉所有的cscope链接）
              使用方法：
              :cs kill {num|partial_name}


然后，要在用的时候需要手动加载：
:cs add cscope.out


针对特定文件：
#!/bin/sh

find . -name "*.h" -o -name "*.c" -o -name "*.cc" -name "*.s" -o -name "*.c" -name "*.S" -o -name "*.c"> cscope.files
cscope -bkq -i cscope.files
ctags -R


